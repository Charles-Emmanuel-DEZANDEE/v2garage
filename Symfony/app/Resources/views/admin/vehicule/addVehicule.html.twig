{% extends 'base.html.twig' %}

{% block body %}

<div class="container">
    {% if typePage == 'ajout' %}
        <h1>Ajouter un Véhicule</h1>
    {% elseif typePage == 'modif' %}
        <h1>Modifier un Véhicule</h1>
    {% endif %}

    {{ form_start(form, { 'attr' : { 'novalidate' : 'novalidate' , 'class': 'form-horizontal'} }) }}

    {# Les erreurs générales du formulaire. #}
    <p class="alert">{{ form_errors(form) }} </p>

    <legend>{{client.lastName}} {{client.firstName}}</legend>

    {# Génération du label + error + widget pour un champ. #}
    <div class="form-group required">
        {# Génération du label. #}
        {{ form_label(form.brand, "Marque", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
        <div class="col-sm-8">
            {# Génération de l'input. #}
            {{ form_widget(form.brand, {'attr': {'class': 'form-control'}}) }}
        </div>
        {# Affichage des erreurs pour ce champ précis. #}
        <div class="col-sm-2">{{ form_errors(form.brand) }} </div>
    </div>

    <div class="form-group required">
        {{ form_label(form.model, "Modéle", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
        <div class="col-sm-8">
            {{ form_widget(form.model, {'attr': {'class': 'form-control'}}) }}
        </div>
        <div class="col-sm-2">{{ form_errors(form.model) }} </div>
    </div>

    <div class="form-group">
        {{ form_label(form.vin, "Numéro de série", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

        <div class="col-sm-8">
             {{ form_widget(form.vin, {'attr': {'class': 'form-control upper'}}) }}
        </div>
        <div class="col-sm-2">{{ form_errors(form.vin) }} </div>
    </div>

    <div class="form-group required">
        {{ form_label(form.registration, "Numéro d'immatriculation", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

        <div class="col-sm-8">
            {{ form_widget(form.registration, {'attr': {'class': 'form-control upper'}}) }}
        </div>
        <div class="col-sm-2">{{ form_errors(form.registration) }} </div>
    </div>

{#
    <div class="form-group">
        {{ form_label(form.mileage, "Kilométrage", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

        <div class="col-sm-8">
            {{ form_widget(form.mileage , {'attr': {'class': 'form-control'}}) }}
        </div>
        <div class="col-sm-2">{{ form_errors(form.mileage) }} </div>
    </div>
#}

    <div class="form-group">
        {{ form_label(form.circulationLaunchDate, "Date de mise en circulation", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

        <div class="col-sm-8">
            {{ form_widget(form.circulationLaunchDate , {'attr': {'class': 'form-control js-datepicker'}}) }}
        </div>
        <div class="col-sm-2">{{ form_errors(form.circulationLaunchDate ) }} </div>
    </div>

    <div class="form-group">
        {{ form_label(form.lastControlDate, "Date du dernier contrôle technique", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

        <div class="col-sm-8">
            {{ form_widget(form.lastControlDate , {'attr': {'class': 'form-control js-datepicker'}}) }}
        </div>
        <div class="col-sm-2">{{ form_errors(form.lastControlDate) }} </div>
    </div>

     <p>
        <input type="submit" class="btn btn-primary" name="submit" value="Valider" >
    </p>

    {# Génération automatique des champs pas encore écrits.
       Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
       et tous les champs cachés (type « hidden »). #}
    {{ form_rest(form) }}

    {{ form_end(form) }}

</div>

{% endblock %}

{% block javascripts %}
    <script>
        $(document).ready(function () {
            $('.js-datepicker').datepicker({
                format: "dd-mm-yyyy",
                todayBtn: "linked",
                clearBtn: true,
                language: "fr",
                todayHighlight: true,
                autoclose: true
            });
//            formatage du numéro de série et immatriculation en majuscule
            $('.upper').keyup(function() {
                var val = this.value;
                var newVal = val.toUpperCase();
                this.value = newVal;

            });
        });
    </script>

{% endblock %}
